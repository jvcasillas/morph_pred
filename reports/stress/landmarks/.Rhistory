# take 'heritage_complete' from line 826 (or around there)
all_data <- heritage_complete %>%
filter(group == "hs") %>%
bind_rows(., learners_complete)
# No coda, syl 2 onset --------------------------------------------------------
no_coda <- all_data %>%
filter(., coda == 0 & landmark == 'word3_c2') %>%
mutate(., group = fct_relevel(group, 'ss')) %>%
mutate(., freq_sc = (freq - mean(freq)) / sd(freq),
phon_prob_sc = (phon_prob - mean(phon_prob)) / sd(phon_prob),
biphon_prob_sc = (biphon_prob - mean(biphon_prob)) / sd(biphon_prob))
nocoda_mod_null <- glmer(
cbind(targetCount, distractorCount) ~ - 1 +
(1 + wm_c | participant) +
(1 + wm_c + freq_sc + phon_prob_sc | target),
data = no_coda,
control = glmerControl(optimizer = 'bobyqa', optCtrl = list(maxfun = 3e5)),
family = 'binomial')
# add group:wm interaction
nocoda_mod_wm <- update(nocoda_mod_null, .~. + group:wm_c)
# effect of group:wm interaction
anova(nocoda_mod_null, nocoda_mod_wm, test = 'Chisq') # no
# add group:freq interaction
nocoda_mod_freq <- update(nocoda_mod_null, .~. + group:freq_sc)
# effect of group:freq interaction
anova(nocoda_mod_null, nocoda_mod_freq, test = 'Chisq') # yes
# add group:phon_prob interaction
nocoda_mod_phon_prob <- update(nocoda_mod_freq, .~. + group:phon_prob_sc)
# effect of group: phon_prob interaction
anova(nocoda_mod_freq, nocoda_mod_phon_prob, test = 'Chisq') # yes
# update final model with all main effects (this is only for plotting)
nocoda_mod_final <- update(nocoda_mod_phon_prob, .~. +
group +
freq_sc +
phon_prob_sc + 1)
# summary of final model for reporting (no main effects)
summary(nocoda_mod_phon_prob)
# Coda, syl 1 offset ----------------------------------------------------------
coda <- all_data %>%
filter(., coda == 1, landmark == 'word3_c3') %>%
mutate(., group = fct_relevel(group, 'ss')) %>%
mutate(., freq_sc = (freq - mean(freq)) / sd(freq),
phon_prob_sc = (phon_prob - mean(phon_prob)) / sd(phon_prob),
biphon_prob_sc = (biphon_prob - mean(biphon_prob)) / sd(biphon_prob))
coda
coda_mod_null <- glmer(
cbind(targetCount, distractorCount) ~ - 1 +
(1 + wm_c | participant) +
(0 + wm_c + freq_sc + phon_prob_sc | target),
data = coda,
control = glmerControl(optimizer = 'bobyqa', optCtrl = list(maxfun = 3e5)),
family = 'binomial')
# add group:wm interaction
coda_mod_wm <- update(coda_mod_null, .~. + group:wm_c)
# test group:wm interaction
anova(coda_mod_null, coda_mod_wm, test = 'Chisq') # no
coda_mod_null <- glmer(
cbind(targetCount, distractorCount) ~ - 1 +
(1 + wm_c | participant) +
(1 + wm_c + freq_sc + phon_prob_sc | target),
data = coda,
control = glmerControl(optimizer = 'bobyqa', optCtrl = list(maxfun = 3e5)),
family = 'binomial')
# add group:wm interaction
coda_mod_wm <- update(coda_mod_null, .~. + group:wm_c)
# test group:wm interaction
anova(coda_mod_null, coda_mod_wm, test = 'Chisq') # no
# add group:freq interaction
coda_mod_freq <- update(coda_mod_null, .~. + group:freq_sc)
# test group:freq interaction
anova(coda_mod_wm, coda_mod_freq, test = 'Chisq') # yes
# add group:phon_prob interaction
coda_mod_phon_prob <- update(coda_mod_freq, .~. + group:phon_prob_sc)
# test group:phon_prob interaction
anova(coda_mod_freq, coda_mod_phon_prob, test = 'Chisq') # no
# update final model with main effects (for plotting)
coda_mod_final <- update(coda_mod_phon_prob, .~. +
group +
freq_sc +
phon_prob_sc + 1)
summary(coda_mod_phon_prob)
coda_mod_null <- glmer(
cbind(targetCount, distractorCount) ~ - 1 +
(1 + wm_c | participant) +
(0 + wm_c + freq_sc + phon_prob_sc | target),
data = coda,
control = glmerControl(optimizer = 'bobyqa', optCtrl = list(maxfun = 3e5)),
family = 'binomial')
# add group:wm interaction
coda_mod_wm <- update(coda_mod_null, .~. + group:wm_c)
# test group:wm interaction
anova(coda_mod_null, coda_mod_wm, test = 'Chisq') # no
# add group:freq interaction
coda_mod_freq <- update(coda_mod_null, .~. + group:freq_sc)
# test group:freq interaction
anova(coda_mod_wm, coda_mod_freq, test = 'Chisq') # yes
# add group:phon_prob interaction
coda_mod_phon_prob <- update(coda_mod_freq, .~. + group:phon_prob_sc)
# test group:phon_prob interaction
anova(coda_mod_freq, coda_mod_phon_prob, test = 'Chisq') # yes
# update final model with main effects (for plotting)
coda_mod_final <- update(coda_mod_phon_prob, .~. +
group +
freq_sc +
phon_prob_sc + 1)
summary(coda_mod_phon_prob)
# Get vector of wm
my_wm <- seq(from = min(unique(learners_no_coda$wm_c)),
to = max(unique(learners_no_coda$wm_c)), length.out = 5)
my_freq <- seq(from = min(unique(learners_no_coda$freq_sc)),
to = max(unique(learners_no_coda$freq_sc)), length.out = 5)
my_phon <- seq(from = min(unique(learners_no_coda$phon_prob_sc)),
to = max(unique(learners_no_coda$phon_prob_sc)), length.out = 5)
# Get vector of wm
my_wm <- seq(from = min(unique(no_coda$wm_c)),
to = max(unique(no_coda$wm_c)), length.out = 5)
my_freq <- seq(from = min(unique(no_coda$freq_sc)),
to = max(unique(no_coda$freq_sc)), length.out = 5)
my_phon <- seq(from = min(unique(no_coda$phon_prob_sc)),
to = max(unique(no_coda$phon_prob_sc)), length.out = 5)
# Get vector of group levels
my_group <- c('ss', 'la', 'hs')
my_target <- unique(no_coda$target)
# Use expand.grid to create the df
nocoda_pred_df <- expand.grid(
participant = unique(no_coda$participant),
wm_c = my_wm,
freq_sc = my_freq,
phon_prob_sc = my_phon,
group = my_group,
target = my_target) %>%
arrange(participant)
coda_pred_df <- expand.grid(
participant = unique(coda$participant),
wm_c = my_wm,
freq_sc = my_freq,
phon_prob_sc = my_phon,
group = my_group,
target = my_target) %>%
arrange(participant)
# Use new DF to get predictions
nocoda_pred_sim <- predictInterval(
merMod = nocoda_mod_final,
newdata = nocoda_pred_df,
which = 'full', level = 0.95,
n.sims = 500, stat = 'mean',
type = 'probability',
returnSims = FALSE, seed = 1
)
# Combine the predictions with the df created above
# add 'stim' to keep x axis on 'normal' vot scale
nocoda_preds <- bind_cols(nocoda_pred_df, nocoda_pred_sim)
write_csv(nocoda_preds, "./data/nocoda_preds.csv")
# Use new DF to get predictions
coda_pred_sim <- predictInterval(
merMod = coda_mod_final,
newdata = coda_pred_df,
which = 'full', level = 0.95,
n.sims = 500, stat = 'mean',
type = 'probability',
returnSims = FALSE, seed = 1
)
coda_preds <- bind_cols(coda_pred_df, coda_pred_sim)
write_csv(coda_preds, "./data/coda_preds.csv")
nocoda_preds <- read_csv("./data/nocoda_preds.csv")
coda_preds <- read_csv("./data/coda_preds.csv")
learner_nocoda_preds %>%
ggplot(., aes(x = freq_sc, y = fit)) +
geom_jitter(data = learners_no_coda, aes(y = targetProp, color = group),
width = 0.5, alpha = 0.2) +
stat_summary(aes(color = group), fun.y = mean, geom = 'line', size = 0.75) +
scale_color_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA')) +
scale_fill_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA')) +
coord_cartesian(ylim = c(0, 1)) +
labs(y = "Target fixations", x = "Verb frequency\n(scaled)",
title = "No coda") +
my_theme()
nocoda_preds %>%
ggplot(., aes(x = freq_sc, y = fit)) +
geom_jitter(data = learners_no_coda, aes(y = targetProp, color = group),
width = 0.5, alpha = 0.2) +
stat_summary(aes(color = group), fun.y = mean, geom = 'line', size = 0.75) +
scale_color_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA')) +
scale_fill_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA')) +
coord_cartesian(ylim = c(0, 1)) +
labs(y = "Target fixations", x = "Verb frequency\n(scaled)",
title = "No coda") +
my_theme()
nocoda_preds %>%
ggplot(., aes(x = freq_sc, y = fit)) +
geom_jitter(data = no_coda, aes(y = targetProp, color = group),
width = 0.5, alpha = 0.2) +
stat_summary(aes(color = group), fun.y = mean, geom = 'line', size = 0.75) +
scale_color_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA')) +
scale_fill_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA')) +
coord_cartesian(ylim = c(0, 1)) +
labs(y = "Target fixations", x = "Verb frequency\n(scaled)",
title = "No coda") +
my_theme()
nocoda_preds %>%
ggplot(., aes(x = freq_sc, y = fit)) +
geom_jitter(data = no_coda, aes(y = targetProp, color = group),
width = 0.5, alpha = 0.2) +
stat_summary(aes(color = group), fun.y = mean, geom = 'line', size = 0.75) +
scale_color_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA', 'HS')) +
scale_fill_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA', 'HS')) +
coord_cartesian(ylim = c(0, 1)) +
labs(y = "Target fixations", x = "Verb frequency\n(scaled)",
title = "No coda") +
my_theme()
unique(nocoda_preds$group)
nocoda_preds %>%
ggplot(., aes(x = phon_prob_sc, y = fit)) +
geom_jitter(data = no_coda, aes(y = targetProp, color = group),
width = 0.5, alpha = 0.2) +
stat_summary(aes(color = group), fun.y = mean, geom = 'line', size = 0.75) +
scale_color_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA', 'HS')) +
scale_fill_brewer(name = '', palette = "Set1",
labels = c('SS', 'LA', 'HS')) +
coord_cartesian(ylim = c(0, 1)) +
labs(y = "Target fixations", x = "Phonotactic probability\n(scaled)",
title = "No coda") +
my_theme()
nocoda_preds %>%
ggplot(., aes(x = freq_sc, y = fit)) +
geom_jitter(data = no_coda, aes(y = targetProp, color = group),
width = 0.5, alpha = 0.2) +
stat_summary(aes(color = group), fun.y = mean, geom = 'line', size = 0.75) +
scale_color_brewer(name = '', palette = "Set1",
labels = c('SS', 'HS', 'LA')) +
scale_fill_brewer(name = '', palette = "Set1",
labels = c('SS', 'HS', 'LA')) +
coord_cartesian(ylim = c(0, 1)) +
labs(y = "Target fixations", x = "Verb frequency\n(scaled)",
title = "No coda") +
my_theme()
nocoda_preds %>%
ggplot(., aes(x = phon_prob_sc, y = fit)) +
geom_jitter(data = no_coda, aes(y = targetProp, color = group),
width = 0.5, alpha = 0.2) +
stat_summary(aes(color = group), fun.y = mean, geom = 'line', size = 0.75) +
scale_color_brewer(name = '', palette = "Set1",
labels = c('SS', 'HS', 'LA')) +
scale_fill_brewer(name = '', palette = "Set1",
labels = c('SS', 'HS', 'LA')) +
coord_cartesian(ylim = c(0, 1)) +
labs(y = "Target fixations", x = "Phonotactic probability\n(scaled)",
title = "No coda") +
my_theme()
coda_preds %>%
ggplot(., aes(x = freq_sc, y = fit)) +
geom_jitter(data = coda, aes(y = targetProp, color = group),
width = 0.5, alpha = 0.2) +
stat_summary(aes(color = group), fun.y = mean, geom = 'line', size = 0.75) +
scale_color_brewer(name = '', palette = "Set1",
labels = c('SS', 'HS', 'LA')) +
scale_fill_brewer(name = '', palette = "Set1",
labels = c('SS', 'HS', 'LA')) +
coord_cartesian(ylim = c(0, 1)) +
labs(y = "Target fixations", x = "Verb frequency\n(scaled)",
title = "Coda") +
my_theme()
coda_preds %>%
ggplot(., aes(x = phon_prob_sc, y = fit)) +
geom_jitter(data = coda, aes(y = targetProp, color = group),
width = 0.5, alpha = 0.2) +
stat_summary(aes(color = group), fun.y = mean, geom = 'line', size = 0.75) +
scale_color_brewer(name = '', palette = "Set1",
labels = c('SS', 'HS', 'LA')) +
scale_fill_brewer(name = '', palette = "Set1",
labels = c('SS', 'HS', 'LA')) +
coord_cartesian(ylim = c(0, 1)) +
labs(y = "Target fixations", x = "Phonotactic probability\n(scaled)",
title = "Coda") +
my_theme()
all_data <- heritage_complete %>%
filter(group == "hs") %>%
bind_rows(., learners_complete) %>%
group_by(coda) %>%
mutate(., freq_sc = (freq - mean(freq)) / sd(freq),
phon_prob_sc = (phon_prob - mean(phon_prob)) / sd(phon_prob),
biphon_prob_sc = (biphon_prob - mean(biphon_prob)) / sd(biphon_prob)) %>%
ungroup(.)
mean(all_data$freq_sc)
# No coda, syl 2 onset --------------------------------------------------------
no_coda <- all_data %>%
filter(., coda == 0 & landmark == 'word3_c2') %>%
mutate(., group = fct_relevel(group, 'ss'))
nocoda_mod_null <- glmer(
cbind(targetCount, distractorCount) ~ - 1 +
(1 + wm_c | participant) +
(1 + wm_c + freq_sc + phon_prob_sc | target),
data = no_coda,
control = glmerControl(optimizer = 'bobyqa', optCtrl = list(maxfun = 3e5)),
family = 'binomial')
# add group:wm interaction
nocoda_mod_wm <- update(nocoda_mod_null, .~. + group:wm_c)
# effect of group:wm interaction
anova(nocoda_mod_null, nocoda_mod_wm, test = 'Chisq') # no
# add group:freq interaction
nocoda_mod_freq <- update(nocoda_mod_null, .~. + group:freq_sc)
# effect of group:freq interaction
anova(nocoda_mod_null, nocoda_mod_freq, test = 'Chisq') # yes
# add group:phon_prob interaction
nocoda_mod_phon_prob <- update(nocoda_mod_freq, .~. + group:phon_prob_sc)
# effect of group: phon_prob interaction
anova(nocoda_mod_freq, nocoda_mod_phon_prob, test = 'Chisq') # yes
# update final model with all main effects (this is only for plotting)
nocoda_mod_final <- update(nocoda_mod_phon_prob, .~. +
group +
freq_sc +
phon_prob_sc + 1)
# summary of final model for reporting (no main effects)
summary(nocoda_mod_phon_prob)
# Coda, syl 1 offset ----------------------------------------------------------
coda <- all_data %>%
filter(., coda == 1, landmark == 'word3_c3') %>%
mutate(., group = fct_relevel(group, 'ss'))
coda_mod_null <- glmer(
cbind(targetCount, distractorCount) ~ - 1 +
(1 + wm_c | participant) +
(0 + wm_c + freq_sc + phon_prob_sc | target),
data = coda,
control = glmerControl(optimizer = 'bobyqa', optCtrl = list(maxfun = 3e5)),
family = 'binomial')
# add group:wm interaction
coda_mod_wm <- update(coda_mod_null, .~. + group:wm_c)
# test group:wm interaction
anova(coda_mod_null, coda_mod_wm, test = 'Chisq') # no
# add group:freq interaction
coda_mod_freq <- update(coda_mod_null, .~. + group:freq_sc)
# test group:freq interaction
anova(coda_mod_wm, coda_mod_freq, test = 'Chisq') # yes
# add group:phon_prob interaction
coda_mod_phon_prob <- update(coda_mod_freq, .~. + group:phon_prob_sc)
# test group:phon_prob interaction
anova(coda_mod_freq, coda_mod_phon_prob, test = 'Chisq') # yes
# update final model with main effects (for plotting)
coda_mod_final <- update(coda_mod_phon_prob, .~. +
group +
freq_sc +
phon_prob_sc + 1)
summary(coda_mod_phon_prob)
# summary of final model for reporting (no main effects)
summary(nocoda_mod_phon_prob)
no_coda %>%
ggplot(., (aes(x = freq_sc, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
no_coda %>%
ggplot(., (aes(x = wm_sc, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
no_coda
no_coda %>%
ggplot(., (aes(x = wm, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
no_coda %>%
ggplot(., (aes(x = WM, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
heritage_complete %>%
filter(group == "hs") %>%
rename(., wm = WM)
heritage_complete %>%
filter(group == "hs") %>%
rename(., wm = WM) %>%
bind_rows(., learners_complete)
heritage_complete %>%
filter(group == "hs") %>%
rename(., wm = WM) %>%
bind_rows(., learners_complete) %>%
na.omit(.)
heritage_complete %>%
filter(group == "hs") %>%
rename(., wm = WM) %>%
bind_rows(., learners_complete) %>%
na.omit(.) %>%
group_by(coda) %>%
mutate(., freq_sc = (freq - mean(freq)) / sd(freq),
phon_prob_sc = (phon_prob - mean(phon_prob)) / sd(phon_prob),
biphon_prob_sc = (biphon_prob - mean(biphon_prob)) / sd(biphon_prob)) %>%
ungroup(.)
all_data <- heritage_complete %>%
filter(group == "hs") %>%
rename(., wm = WM) %>%
bind_rows(., learners_complete) %>%
na.omit(.) %>%
group_by(coda) %>%
mutate(., freq_sc = (freq - mean(freq)) / sd(freq),
phon_prob_sc = (phon_prob - mean(phon_prob)) / sd(phon_prob),
biphon_prob_sc = (biphon_prob - mean(biphon_prob)) / sd(biphon_prob)) %>%
ungroup(.)
# No coda, syl 2 onset --------------------------------------------------------
no_coda <- all_data %>%
filter(., coda == 0 & landmark == 'word3_c2') %>%
mutate(., group = fct_relevel(group, 'ss'))
nocoda_mod_null <- glmer(
cbind(targetCount, distractorCount) ~ - 1 +
(1 + wm_c | participant) +
(1 + wm_c + freq_sc + phon_prob_sc | target),
data = no_coda,
control = glmerControl(optimizer = 'bobyqa', optCtrl = list(maxfun = 3e5)),
family = 'binomial')
# add group:wm interaction
nocoda_mod_wm <- update(nocoda_mod_null, .~. + group:wm_c)
# effect of group:wm interaction
anova(nocoda_mod_null, nocoda_mod_wm, test = 'Chisq') # no
# add group:freq interaction
nocoda_mod_freq <- update(nocoda_mod_null, .~. + group:freq_sc)
# effect of group:freq interaction
anova(nocoda_mod_null, nocoda_mod_freq, test = 'Chisq') # yes
# add group:phon_prob interaction
nocoda_mod_phon_prob <- update(nocoda_mod_freq, .~. + group:phon_prob_sc)
# effect of group: phon_prob interaction
anova(nocoda_mod_freq, nocoda_mod_phon_prob, test = 'Chisq') # yes
# update final model with all main effects (this is only for plotting)
nocoda_mod_final <- update(nocoda_mod_phon_prob, .~. +
group +
freq_sc +
phon_prob_sc + 1)
# summary of final model for reporting (no main effects)
summary(nocoda_mod_phon_prob)
# Coda, syl 1 offset ----------------------------------------------------------
coda <- all_data %>%
filter(., coda == 1, landmark == 'word3_c3') %>%
mutate(., group = fct_relevel(group, 'ss'))
coda_mod_null <- glmer(
cbind(targetCount, distractorCount) ~ - 1 +
(1 + wm_c | participant) +
(0 + wm_c + freq_sc + phon_prob_sc | target),
data = coda,
control = glmerControl(optimizer = 'bobyqa', optCtrl = list(maxfun = 3e5)),
family = 'binomial')
# add group:wm interaction
coda_mod_wm <- update(coda_mod_null, .~. + group:wm_c)
# test group:wm interaction
anova(coda_mod_null, coda_mod_wm, test = 'Chisq') # no
# add group:freq interaction
coda_mod_freq <- update(coda_mod_null, .~. + group:freq_sc)
# test group:freq interaction
anova(coda_mod_wm, coda_mod_freq, test = 'Chisq') # yes
# add group:phon_prob interaction
coda_mod_phon_prob <- update(coda_mod_freq, .~. + group:phon_prob_sc)
# test group:phon_prob interaction
anova(coda_mod_freq, coda_mod_phon_prob, test = 'Chisq') # yes
# update final model with main effects (for plotting)
coda_mod_final <- update(coda_mod_phon_prob, .~. +
group +
freq_sc +
phon_prob_sc + 1)
summary(coda_mod_phon_prob)
no_coda %>%
ggplot(., (aes(x = wm_c, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
no_coda %>%
ggplot(., (aes(x = freq_sc, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
no_coda
no_coda %>%
ggplot(., (aes(x = phon_prob_sc, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
coda %>%
ggplot(., (aes(x = wm_c, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
coda %>%
ggplot(., (aes(x = freq_sc, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
coda %>%
ggplot(., (aes(x = phon_prob_sc, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
no_coda %>%
ggplot(., (aes(x = phon_prob_sc, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
all_data %>%
ggplot(., (aes(x = wm_c, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
all_data %>%
ggplot(., (aes(x = freq_sc, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
all_data %>%
ggplot(., (aes(x = phon_prob_sc, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
all_data %>%
ggplot(., (aes(x = wm_c, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
all_data %>%
ggplot(., (aes(x = wm_c, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange') +
geom_smooth()
all_data %>%
ggplot(., (aes(x = wm_c, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange') +
geom_smooth(method = 'lm')
all_data %>%
ggplot(., (aes(x = wm_c, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange') +
geom_smooth(method = 'lm', se = F)
all_data %>%
ggplot(., (aes(x = wm_c, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange') +
geom_smooth(method = 'lm', se = F, fullrange = T)
no_coda %>%
ggplot(., (aes(x = wm_c, y = targetProp, color = group))) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange')
View(learners_complete)
